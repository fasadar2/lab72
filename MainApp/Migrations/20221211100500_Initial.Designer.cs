// <auto-generated />
using System;
using MainApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MainApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221211100500_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("LabsDB.Entity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Test",
                            Password = "Test"
                        });
                });

            modelBuilder.Entity("LabsDB.Entity.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("LabsDB.Entity.Indication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HouseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HouseId");

                    b.ToTable("Indications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            HouseId = 1,
                            TimeStamp = new DateTime(2022, 12, 11, 13, 5, 0, 626, DateTimeKind.Local).AddTicks(7854),
                            Title = "Электричество",
                            Value = 100.0
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 1,
                            HouseId = 1,
                            TimeStamp = new DateTime(2022, 12, 11, 13, 5, 0, 626, DateTimeKind.Local).AddTicks(7870),
                            Title = "Вода",
                            Value = 200.0
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 1,
                            HouseId = 2,
                            TimeStamp = new DateTime(2022, 12, 11, 13, 5, 0, 626, DateTimeKind.Local).AddTicks(7871),
                            Title = "Электричество",
                            Value = 200.0
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 1,
                            HouseId = 2,
                            TimeStamp = new DateTime(2022, 12, 11, 13, 5, 0, 626, DateTimeKind.Local).AddTicks(7872),
                            Title = "Вода",
                            Value = 400.0
                        });
                });

            modelBuilder.Entity("LabsDB.Entity.Indication", b =>
                {
                    b.HasOne("LabsDB.Entity.Employee", "Employee")
                        .WithMany("Indications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabsDB.Entity.House", "House")
                        .WithMany("Indications")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("House");
                });

            modelBuilder.Entity("LabsDB.Entity.Employee", b =>
                {
                    b.Navigation("Indications");
                });

            modelBuilder.Entity("LabsDB.Entity.House", b =>
                {
                    b.Navigation("Indications");
                });
#pragma warning restore 612, 618
        }
    }
}
